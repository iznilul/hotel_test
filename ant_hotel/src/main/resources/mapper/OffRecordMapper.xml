<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.OffRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.OffRecord">
    <constructor>
      <idArg column="userId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="offTime" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="roomId" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from off_record
    where userId = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.OffRecord">
    insert into off_record (userId, `name`, offTime, 
      roomId)
    values (#{userid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{offtime,jdbcType=VARCHAR}, 
      #{roomid,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.OffRecord">
    update off_record
    set `name` = #{name,jdbcType=VARCHAR},
      offTime = #{offtime,jdbcType=VARCHAR},
      roomId = #{roomid,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select userId, `name`, offTime, roomId
    from off_record
    where userId = #{userid,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select userId, `name`, offTime, roomId
    from off_record
  </select>
</mapper>